name: Tests

on:
  push:
    paths-ignore:
      - publiccode.yml
    branches:
      - master
      - develop
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - master
      - develop

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3

jobs:
  tests:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          # be careful not to include ~/.m2/settings.xml which contains credentials
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '.mvn/*.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache Test Artifacts
        uses: actions/cache@v3
        with:
          path: |
            .artifacts
          key: ${{ runner.os }}-artifacts-${{ hashFiles('**/Artifacts.java') }}

      - name: Install ffmpeg on Ubuntu
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
        if: startsWith(matrix.os, 'ubuntu')
  
      - name: Install ffmpeg on MacOS
        run: brew install ffmpeg
        if: startsWith(matrix.os, 'macos')

      - name: Install ffmpeg on Windows
        run: choco install ffmpeg
        if: startsWith(matrix.os, 'windows')

      - run: ffmpeg -version

      - name: Build and test
        run: ./mvnw clean package -B

  test-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Set up RANDOM GPG key
        run: gpg --quick-generate-key --batch  --passphrase '' test42

      - uses: actions/cache@v3
        with:
          # be careful not to include ~/.m2/settings.xml which contains credentials
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: release-m2-${{ hashFiles('**/pom.xml', '.mvn/*.xml') }}
          restore-keys: |
            release-m2
            ${{ runner.os }}-m2

      - name: Test release
        run: bash mvnw clean install -B -DskipTests -PJ9-module -Prelease
